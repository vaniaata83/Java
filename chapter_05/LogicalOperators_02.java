package chapter_05;

public class LogicalOperators_02 {
	public static void main(String[]args){
		//Съкратени логически оператори && и ||, изчисляват отляво на дясно и напр. при 
		//|| следи поне едниния от операторите да е истина и връща истина, не губи време в изчисляване на втория, 
		//защото единия ако  истина, резултата е истина
		
		boolean b= true && false;
		System.out.println("b="+b);
		
		boolean a=true||false;
		System.out.println("a="+a);
		
		//Несъкратени логически оператори | и &. Изчисляват се и двата операнда, 
		//независимо че резултата е предварително ясен. Това е разликата.
		
		// Операторите ^ и !. При ^ изкл. ИЛИ, се прилага само ърху булеви стойности.
		//Резулатата е истина, само когато единия отоперандите е иснина, но не и двата едновременно
		
		System.out.println("XOR:"+((2<3)^(4>3))); //false
		
		boolean c =!(7==5);
		System.out.println("!"+c); //true, (7==5) e false, obratnoto e true
		
		//Побитови операции върху цели числа: &, |, ^
		
		byte b1 = 6 & 5;  //  00000110 & 00000101 = 00000100
		byte b2 = 7 | 9;  //  00000111 | 00001001 = 00001111
		byte b3 = 5 ^ 4;  //  00000101 ^ 00000100 = 00000001
		System.out.println(b1+" "+b2+" "+b3);
		
		// При & - връща истина, когато и двата бита са 1;
		// При | - връща истина, когато единия бит е 1;
		// При ^ - връща истина, когато точно единият от двата бита е 1; т.е при 1 ^ 1 = 0;
		
		
		
		
		
	}

}
